{"version":3,"sources":["serviceWorker.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","App","prop","state","produits","code","designation","famille","prix","addProduit","bind","delproduit","handleChange","getAllProduit","renderTableData","updateProduit","event","this","setState","target","name","value","preventDefault","console","log","axios","post","headers","then","res","status","confirm","catch","error","delete","data","get","map","produit","index","key","Container","Button","variant","onClick","Table","striped","bordered","hover","id","Form","onSubmit","handleSubmit","className","Group","controlId","Label","Control","onChange","type","React","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fd8ac674.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport axios from \"axios\";\n\nimport { Button, Form, Container, Table } from 'react-bootstrap';\n\n\nexport class App extends React.Component {\n\n  constructor(prop) {\n    super(prop);\n\n\n    this.state = {\n\n      produits: [\n\n      ],\n      code: 0,\n      designation: \"\",\n      famille: \"\",\n      prix: 0,\n    };\n\n    this.addProduit = this.addProduit.bind(this);\n    this.delproduit = this.delproduit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getAllProduit = this.getAllProduit.bind(this);\n    this.renderTableData = this.renderTableData.bind(this);\n    this.updateProduit = this.updateProduit.bind(this);\n\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  addProduit(event) {\n\n    event.preventDefault();\n\n    const { code, designation, famille, prix } = this.state;\n\n    console.log(this.state);\n\n    axios.post('http://localhost:4000/api/addProduit',\n      {\n        designation: designation,\n        famille: famille,\n        prix: prix,\n      },\n      { headers: { 'Content-Type': 'application/json' } }\n    )\n      .then(res => {\n\n        if (res.status = 200) {\n\n\n          window.confirm(\"Produit Ajouter!\")\n          //this.getAllProduit();\n        }\n        console.log(res);\n        console.log(this.state);\n      })\n      .catch(error => {\n        window.confirm(\"Erreur veuillez reessayer\");\n        console.log(this.state);\n      })\n\n  }\n\n  delproduit(event) {\n\n    event.preventDefault();\n\n    const { code } = this.state;\n\n    console.log(this.state);\n\n    axios.delete('http://localhost:4000/api/delProduit',\n      {\n        headers: { 'Content-Type': 'application/json' },\n        data: { code: code }\n      },\n    )\n      .then(res => {\n\n        if (res.status = 200) {\n\n          window.confirm(\"Produit Suprimmer!\")\n        }\n        console.log(res);\n        console.log(this.state);\n      })\n      .catch(error => {\n        window.confirm(\"Erreur veuillez reessayer\");\n        console.log(this.state);\n      })\n\n  }\n\n  getAllProduit(event) {\n\n    event.preventDefault();\n\n    axios.get('http://localhost:4000/api/showProduit',\n      { headers: { 'Content-Type': 'application/json' } }\n    )\n      .then(res => {\n        console.log(res);\n        if (res.status = 200) {\n          this.setState({\n            produits: res.data\n          })\n        }\n        console.log(this.state);\n      })\n      .catch(error => {\n        window.confirm(\"Erreur veuillez reessayer\");\n        console.log(this.state);\n      })\n  }\n\n  updateProduit(event){\n    event.preventDefault();\n\n    const { code, designation, famille, prix } = this.state;\n\n    console.log(this.state);\n\n    axios.post('http://localhost:4000/api/updateProduit',\n      {\n        code:code,\n        designation: designation,\n        famille: famille,\n        prix: prix,\n      },\n      { headers: { 'Content-Type': 'application/json' } }\n    )\n      .then(res => {\n\n        if (res.status = 200) {\n\n\n          window.confirm(\"Produit Modifier!\")\n          //this.getAllProduit();\n        }\n        console.log(res);\n        console.log(this.state);\n      })\n      .catch(error => {\n        window.confirm(\"Erreur veuillez reessayer\");\n        console.log(this.state);\n      })\n  }\n\n  renderTableData() {\n    return this.state.produits.map((produit, index) => {\n      const { code, designation, famille, prix } = produit\n      return (\n        <tr key={code}>\n          <td>{code}</td>\n          <td>{designation}</td>\n          <td>{famille}</td>\n          <td>{prix}</td>\n        </tr>\n      )\n    })\n  }\n\n  render() {\n\n    return (\n      <>\n      <h1> CRUD Produit </h1>\n        <Container>\n          <Button variant=\"success\" onClick={this.getAllProduit}>Get les Produits</Button>\n          <Table striped bordered hover id='produits'>\n            <thead>\n              <tr>\n                <th>Code</th>\n                <th>Designation</th>\n                <th>Famille</th>\n                <th>Prix</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.renderTableData()}\n            </tbody>\n          </Table>\n        </Container>   \n        <hr></hr>\n        <Container>\n          <h4>Ajout produit</h4>\n          <Form onSubmit={this.handleSubmit} className=\"mr-4\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Designation</Form.Label>\n              <Form.Control name=\"designation\" value={this.state.designation} onChange={this.handleChange} type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Famille</Form.Label>\n              <Form.Control name=\"famille\" value={this.state.famille} onChange={this.handleChange} type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Prix</Form.Label>\n              <Form.Control name=\"prix\" value={this.state.prix} onChange={this.handleChange} type=\"text\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" onClick={this.addProduit}>\n              Ajouter Produit\n          </Button>\n          </Form>\n        </Container>\n        <hr></hr>\n\n        <Container>\n          <h4>Supprimer un Produit</h4>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Code</Form.Label>\n            <Form.Control name=\"code\" value={this.state.code} onChange={this.handleChange} type=\"text\" />\n          </Form.Group>\n          <Button variant=\"danger\" onClick={this.delproduit}>\n            Supprimer Produit\n          </Button>\n        </Container>\n        <hr></hr>        \n\n        <Container>\n          <h4>Modifier un Produit</h4>\n          <Form onSubmit={this.handleSubmit} className=\"mr-4\">\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Code</Form.Label>\n            <Form.Control name=\"code\" value={this.state.code} onChange={this.handleChange} type=\"text\" />\n          </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Designation</Form.Label>\n              <Form.Control name=\"designation\" value={this.state.designation} onChange={this.handleChange} type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Famille</Form.Label>\n              <Form.Control name=\"famille\" value={this.state.famille} onChange={this.handleChange} type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Prix</Form.Label>\n              <Form.Control name=\"prix\" value={this.state.prix} onChange={this.handleChange} type=\"text\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" onClick={this.updateProduit}>\n              Modifier\n          </Button>\n          </Form>\n        </Container>        \n\n      </>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n//BootStrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//Component\nimport { App } from './App';\n\n\nReactDOM.render(    \n    <>        \n        <App/>\n    </>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}